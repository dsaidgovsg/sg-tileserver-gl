events {}

http {
    access_log /dev/stdout;
    error_log /dev/stderr warn;

    server {
        listen 8080;

        location / {
            proxy_pass http://127.0.0.1:8081/;

            # The values in https://github.com/maptiler/tileserver-gl/blob/v3.1.1/src/server.js#L422
            # are just smokescreen and not relevant.
            #
            # Also, the official docs in https://tileserver.readthedocs.io/en/latest/deployment.html#running-behind-a-proxy-or-a-load-balancer
            # that suggests to set the following header values are also incorrect (these header values don't appear in the code):
            # - proxy_set_header X-Forwarded-Host $http_host;
            # - proxy_set_header X-Forwarded-Proto $scheme;
            #
            # The values that matter to change how the generate URL in JSON responses are in the following:
            # - https://github.com/maptiler/tileserver-gl/blob/v3.1.1/src/utils.js#L10
            # - https://github.com/maptiler/tileserver-gl/blob/v3.1.1/src/utils.js#L57
            #
            # From there one can infer that req.protocol are req.headers.host are primarily used when publicUrl CLI option is not used,
            # and since Express uses 'X-Forwarded-Proto' header value if present (https://expressjs.com/en/api.html#req.protocol)
            # this means only the following request header values matter:
            # - Host
            # - X-Forwarded-Proto
            #
            # What the default reverse proxy config here does is to convert and use the conventional X-Forwarded-Host and X-Forwarded-Proto,
            # instead of having the user to override Host header value, which often leads to a rejected request.
            #
            # To see this in action, compare the following:
            # - curl http://127.0.0.1:8080/data/singapore.json | jq . | grep 127.0.0.1
            # - curl -H "X-Forwarded-Host: example.com" -H "X-Forwarded-Proto: https" http://127.0.0.1:8080/data/singapore.json | jq . | grep example.com
            #
            # The following URLs are good target URLs to test on:
            # - http://127.0.0.1:8080/styles/several_gray/style.json
            # - http://127.0.0.1:8080/data/singapore.json

            # Return X-Forwarded-Host if present, else fallback to Host
            set_by_lua_block $header_x_forwarded_host {
                return ngx.req.get_headers()['X-Forwarded-Host'] or ngx.req.get_headers()['Host']
            }

            proxy_set_header Host $header_x_forwarded_host;
        }
    }
}
