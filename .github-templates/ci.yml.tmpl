name: CI

on:
  push:
    branches:
    - main
    - v*
  pull_request:
    branches:
    - main
    - v*

jobs:
  build:
    strategy:
      matrix:
        version:
{%- for v in versions %}
{%- for tileserver in v.tileserver %}
{%- for mbtiles in v.mbtiles %}
        - tileserver: "{{ tileserver }}"
          mbtiles:    "{{ mbtiles }}"
{%- endfor %}
{%- endfor %}
{%- endfor %}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: sg-tileserver-gl
      SELF_VERSION: "{{ self_version }}"
      {% raw -%}
      TILESERVER_VERSION: "${{ matrix.version.tileserver }}"
      MBTILES_TAG: "${{ matrix.version.mbtiles }}"
      {%- endraw %}
    steps:
    - name: Set TAG_NAME as env var export
      run: |-
        SUFFIX_TAG="tileserver-${TILESERVER_VERSION}_mbtiles-${MBTILES_TAG}"

        echo "TAG_NAME=${SELF_VERSION}_${SUFFIX_TAG}" >> $GITHUB_ENV
        echo "OPENRESTY_SUFFIX=_openresty" >> $GITHUB_ENV

        SELF_X_VERSION="$(echo ${SELF_VERSION} | cut -d . -f 1)"
        echo "X_TAG_NAME=${SELF_X_VERSION}_${SUFFIX_TAG}" >> $GITHUB_ENV

        SELF_XY_VERSION="$(echo ${SELF_VERSION} | cut -d . -f 1,2)"
        echo "XY_TAG_NAME=${SELF_XY_VERSION}_${SUFFIX_TAG}" >> $GITHUB_ENV
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-node@v3
      with:
        node-version: 12
    - name: Install tera-cli
      run: |-
        wget https://github.com/guangie88/tera-cli/releases/download/v0.4.0/tera_linux_amd64 -O /tmp/tera
        chmod +x /tmp/tera
    - name: Check differences between ci.yml and ci.yml.tmpl
      run: |-
        cp .github/workflows/ci.yml .github/workflows/ci.yml.backup
        TERA=/tmp/tera .github-templates/apply-vars.sh
        if ! diff .github/workflows/ci.yml .github/workflows/ci.yml.backup; then echo "ci.yml.tmpl and ci.yml differs!" && exit 1; fi
    - name: Run setup-scripts
      run: |-
        MBTILES_TAG=${MBTILES_TAG} ./setup.sh
    - name: Build Docker image (native)
      run: |-
        docker build . -t "${IMAGE_NAME}:${TAG_NAME}" \
          --target native \
          --build-arg TILESERVER_VERSION="${TILESERVER_VERSION}"
    - name: Build Docker image (with openresty)
      run: |-
        docker build . -t "${IMAGE_NAME}:${TAG_NAME}${OPENRESTY_SUFFIX}" \
          --build-arg TILESERVER_VERSION="${TILESERVER_VERSION}"
    - name: Push Docker image
      run: bash push-images.sh
      env:
        {% raw -%}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_ORG: ${{ secrets.IMAGE_ORG }}
        {%- endraw %}
      if: github.event_name == 'push'
